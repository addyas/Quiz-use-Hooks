{"ast":null,"code":"import _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\C60709\\\\addyas\\\\using-react-hooks\\\\components\\\\QuizQuestion.js\";\nimport React, { useState } from \"react\";\nimport QuizQuestionButton from \"./QuizQuestionButton.js\";\n\nvar QuizQuestion = function QuizQuestion(props) {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      incorrectAnswer = _useState2[0],\n      setIncorrectAnswer = _useState2[1];\n\n  var handleClick = function handleClick(buttonText) {\n    if (buttonText === props.quiz_question.answer) {\n      props.showNextQuestionHandler();\n    }\n\n    setIncorrectAnswer(!incorrectAnswer);\n  };\n\n  return React.createElement(\"main\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, React.createElement(\"section\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, props.quiz_question.instruction_text)), React.createElement(\"section\", {\n    className: \"buttons\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, props.quiz_question.answer_options.map(function (option, index) {\n    return React.createElement(QuizQuestionButton, {\n      key: index,\n      button_text: option,\n      clickHandler: handleClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    });\n  }))), incorrectAnswer ? React.createElement(\"p\", {\n    className: \"error\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, \"Sorry, that's not right\") : null);\n};\n\nexport default QuizQuestion;","map":{"version":3,"sources":["C:\\Users\\C60709\\addyas\\using-react-hooks\\components\\QuizQuestion.js"],"names":["React","useState","QuizQuestionButton","QuizQuestion","props","incorrectAnswer","setIncorrectAnswer","handleClick","buttonText","quiz_question","answer","showNextQuestionHandler","instruction_text","answer_options","map","option","index"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,kBAAP,MAA+B,yBAA/B;;AAEA,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAAAC,KAAK,EAAI;AAAA,kBACkBH,QAAQ,CAAC,KAAD,CAD1B;AAAA;AAAA,MACrBI,eADqB;AAAA,MACJC,kBADI;;AAE5B,MAAMC,WAAW,GAAG,SAAdA,WAAc,CAAAC,UAAU,EAAI;AAChC,QAAIA,UAAU,KAAKJ,KAAK,CAACK,aAAN,CAAoBC,MAAvC,EAA+C;AAC7CN,MAAAA,KAAK,CAACO,uBAAN;AACD;;AACDL,IAAAA,kBAAkB,CAAC,CAACD,eAAF,CAAlB;AACD,GALD;;AAOA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAID,KAAK,CAACK,aAAN,CAAoBG,gBAAxB,CADF,CADF,EAIE;AAAS,IAAA,SAAS,EAAC,SAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGR,KAAK,CAACK,aAAN,CAAoBI,cAApB,CAAmCC,GAAnC,CAAuC,UAACC,MAAD,EAASC,KAAT,EAAmB;AACzD,WACE,oBAAC,kBAAD;AACE,MAAA,GAAG,EAAEA,KADP;AAEE,MAAA,WAAW,EAAED,MAFf;AAGE,MAAA,YAAY,EAAER,WAHhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAOD,GARA,CADH,CADF,CAJF,EAiBGF,eAAe,GACd;AAAG,IAAA,SAAS,EAAC,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BADc,GAEZ,IAnBN,CADF;AAuBD,CAhCD;;AAkCA,eAAeF,YAAf","sourcesContent":["import React, { useState } from \"react\";\r\nimport QuizQuestionButton from \"./QuizQuestionButton.js\";\r\n\r\nconst QuizQuestion = props => {\r\n  const [incorrectAnswer, setIncorrectAnswer] = useState(false);\r\n  const handleClick = buttonText => {\r\n    if (buttonText === props.quiz_question.answer) {\r\n      props.showNextQuestionHandler();\r\n    }\r\n    setIncorrectAnswer(!incorrectAnswer);\r\n  };\r\n\r\n  return (\r\n    <main>\r\n      <section>\r\n        <p>{props.quiz_question.instruction_text}</p>\r\n      </section>\r\n      <section className=\"buttons\">\r\n        <ul>\r\n          {props.quiz_question.answer_options.map((option, index) => {\r\n            return (\r\n              <QuizQuestionButton\r\n                key={index}\r\n                button_text={option}\r\n                clickHandler={handleClick}\r\n              />\r\n            );\r\n          })}\r\n        </ul>\r\n      </section>\r\n      {incorrectAnswer ? (\r\n        <p className=\"error\">Sorry, that's not right</p>\r\n      ) : null}\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default QuizQuestion;\r\n"]},"metadata":{},"sourceType":"module"}