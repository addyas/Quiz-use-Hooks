{"ast":null,"code":"import _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\C60709\\\\addyas\\\\using-react-hooks\\\\components\\\\QuizQuestion.js\";\n\nimport React, { useState } from 'react';\nimport QuizQuestionButton from './QuizQuestionButton.js';\n\nvar QuizQuestion = function QuizQuestion(props) {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      incorrectAnswer = _useState2[0],\n      setIncorrectAnswer = _useState2[1];\n\n  var handleClick = function handleClick(buttonText) {\n    if (buttonText === props.quiz_question.answer) {\n      props.showNextQuestionHandler();\n    }\n\n    setIncorrectAnswer(!incorrectAnswer);\n  };\n\n  return React.createElement(\"main\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, React.createElement(\"section\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, props.quiz_question.instruction_text)), React.createElement(\"section\", {\n    className: \"buttons\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, _this.props.quiz_question.answer_options.map(function (option, index) {\n    return React.createElement(QuizQuestionButton, {\n      key: index,\n      button_text: option,\n      clickHandler: _this.handleClick.bind(_this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    });\n  }))), _this.state.incorrectAnswer ? React.createElement(\"p\", {\n    className: \"error\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, \"Sorry, that's not right\") : null);\n};\n\nexport default QuizQuestion;","map":{"version":3,"sources":["C:\\Users\\C60709\\addyas\\using-react-hooks\\components\\QuizQuestion.js"],"names":["React","useState","QuizQuestionButton","QuizQuestion","props","incorrectAnswer","setIncorrectAnswer","handleClick","buttonText","quiz_question","answer","showNextQuestionHandler","instruction_text","answer_options","map","option","index","bind","state"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,kBAAP,MAA+B,yBAA/B;;AAEA,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAACC,KAAD,EAAW;AAAA,kBACiBH,QAAQ,CAAC,KAAD,CADzB;AAAA;AAAA,MACtBI,eADsB;AAAA,MACLC,kBADK;;AAE7B,MAAMC,WAAW,GAAG,SAAdA,WAAc,CAACC,UAAD,EAAgB;AAChC,QAAGA,UAAU,KAAKJ,KAAK,CAACK,aAAN,CAAoBC,MAAtC,EAA6C;AACzCN,MAAAA,KAAK,CAACO,uBAAN;AACH;;AACDL,IAAAA,kBAAkB,CAAC,CAACD,eAAF,CAAlB;AACH,GALD;;AAOA,SACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAID,KAAK,CAACK,aAAN,CAAoBG,gBAAxB,CADF,CADF,EAIE;AAAS,IAAA,SAAS,EAAC,SAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,KAAI,CAACR,KAAL,CAAWK,aAAX,CAAyBI,cAAzB,CAAwCC,GAAxC,CAA4C,UAACC,MAAD,EAASC,KAAT,EAAmB;AAC9D,WAAO,oBAAC,kBAAD;AAAoB,MAAA,GAAG,EAAEA,KAAzB;AAAgC,MAAA,WAAW,EAAED,MAA7C;AAAqD,MAAA,YAAY,EAAE,KAAI,CAACR,WAAL,CAAiBU,IAAjB,CAAsB,KAAtB,CAAnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD,GAFA,CADH,CADF,CAJF,EAWG,KAAI,CAACC,KAAL,CAAWb,eAAX,GAA6B;AAAG,IAAA,SAAS,EAAC,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAA7B,GAAiF,IAXpF,CADD;AAeF,CAxBD;;AA0BA,eAAeF,YAAf","sourcesContent":["import React, { useState } from 'react'\r\nimport QuizQuestionButton from './QuizQuestionButton.js'\r\n\r\nconst QuizQuestion = (props) => {\r\n   const [incorrectAnswer, setIncorrectAnswer] = useState(false)\r\n   const handleClick = (buttonText) => {\r\n       if(buttonText === props.quiz_question.answer){\r\n           props.showNextQuestionHandler()\r\n       }\r\n       setIncorrectAnswer(!incorrectAnswer)\r\n   }\r\n\r\n   return (\r\n    <main>\r\n      <section>\r\n        <p>{props.quiz_question.instruction_text}</p>\r\n      </section>\r\n      <section className=\"buttons\">\r\n        <ul>\r\n          {this.props.quiz_question.answer_options.map((option, index) => {\r\n            return <QuizQuestionButton key={index} button_text={option} clickHandler={this.handleClick.bind(this)} />;\r\n          })}\r\n        </ul>\r\n      </section>\r\n      {this.state.incorrectAnswer? (<p className='error'>Sorry, that's not right</p>) : null}\r\n    </main>\r\n  )\r\n}\r\n\r\nexport default QuizQuestion"]},"metadata":{},"sourceType":"module"}